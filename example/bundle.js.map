{"version":3,"file":"bundle.js","sources":["../node_modules/smart-table-operators/dist/bundle/module.js","../node_modules/smart-table-json-pointer/dist/bundle/module.js","../node_modules/smart-table-sort/dist/bundle/module.js","../node_modules/smart-table-filter/dist/bundle/module.js","../node_modules/smart-table-search/dist/bundle/module.js","../node_modules/smart-table-events/dist/bundle/module.js","../node_modules/smart-table-core/dist/bundle/module.js","../lib/loadingIndicator.js","../lib/sort.js","../lib/helpers.js","../lib/filters.js","../lib/search.js","components/row.js","index.js","../lib/table.js","components/summary.js","components/rangeSizeInput.js","components/pagination.js"],"sourcesContent":["const swap = (f) => (a, b) => f(b, a);\nconst compose = (first, ...fns) => (...args) => fns.reduce((previous, current) => current(previous), first(...args));\nconst curry = (fn, arityLeft) => {\n    const arity = arityLeft || fn.length;\n    return (...args) => {\n        const argLength = args.length || 1;\n        if (arity === argLength) {\n            return fn(...args);\n        }\n        const func = (...moreArgs) => fn(...args, ...moreArgs);\n        return curry(func, arity - args.length);\n    };\n};\nconst apply = (fn) => (...args) => fn(...args);\nconst tap = (fn) => arg => {\n    fn(arg);\n    return arg;\n};\n\nexport { swap, compose, curry, apply, tap };\n","const pointer = (path) => {\n    const parts = path.split('.');\n    const partial = (obj = {}, parts = []) => {\n        const p = parts.shift();\n        const current = obj[p];\n        return (current === undefined || current === null || parts.length === 0) ?\n            current : partial(current, parts);\n    };\n    const set = (target, newTree) => {\n        let current = target;\n        const [leaf, ...intermediate] = parts.reverse();\n        for (const key of intermediate.reverse()) {\n            if (current[key] === undefined) {\n                current[key] = {};\n                current = current[key];\n            }\n        }\n        current[leaf] = Object.assign(current[leaf] || {}, newTree);\n        return target;\n    };\n    return {\n        get(target) {\n            return partial(target, [...parts]);\n        },\n        set\n    };\n};\n\nexport { pointer };\n","import { swap } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\n\nconst defaultComparator = (a, b) => {\n    if (a === b) {\n        return 0;\n    }\n    if (a === undefined) {\n        return 1;\n    }\n    if (b === undefined) {\n        return -1;\n    }\n    return a < b ? -1 : 1;\n};\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[\"ASC\"] = \"asc\";\n    SortDirection[\"DESC\"] = \"desc\";\n    SortDirection[\"NONE\"] = \"none\";\n})(SortDirection || (SortDirection = {}));\nconst sortByProperty = (prop, comparator) => {\n    const propGetter = pointer(prop).get;\n    return (a, b) => comparator(propGetter(a), propGetter(b));\n};\nconst defaultSortFactory = (conf) => {\n    const { pointer: pointer$$1, direction = \"asc\" /* ASC */, comparator = defaultComparator } = conf;\n    if (!pointer$$1 || direction === \"none\" /* NONE */) {\n        return (array) => [...array];\n    }\n    const orderFunc = sortByProperty(pointer$$1, comparator);\n    const compareFunc = direction === \"desc\" /* DESC */ ? swap(orderFunc) : orderFunc;\n    return (array) => [...array].sort(compareFunc);\n};\n\nexport { SortDirection, defaultSortFactory };\n","import { compose } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\n\nvar Type;\n(function (Type) {\n    Type[\"BOOLEAN\"] = \"boolean\";\n    Type[\"NUMBER\"] = \"number\";\n    Type[\"DATE\"] = \"date\";\n    Type[\"STRING\"] = \"string\";\n})(Type || (Type = {}));\nconst typeExpression = (type) => {\n    switch (type) {\n        case Type.BOOLEAN:\n            return Boolean;\n        case Type.NUMBER:\n            return Number;\n        case Type.DATE:\n            return val => new Date(val);\n        case Type.STRING:\n            return compose(String, val => val.toLowerCase());\n        default:\n            return val => val;\n    }\n};\nvar FilterOperator;\n(function (FilterOperator) {\n    FilterOperator[\"INCLUDES\"] = \"includes\";\n    FilterOperator[\"IS\"] = \"is\";\n    FilterOperator[\"IS_NOT\"] = \"isNot\";\n    FilterOperator[\"LOWER_THAN\"] = \"lt\";\n    FilterOperator[\"GREATER_THAN\"] = \"gt\";\n    FilterOperator[\"GREATER_THAN_OR_EQUAL\"] = \"gte\";\n    FilterOperator[\"LOWER_THAN_OR_EQUAL\"] = \"lte\";\n    FilterOperator[\"EQUALS\"] = \"equals\";\n    FilterOperator[\"NOT_EQUALS\"] = \"notEquals\";\n    FilterOperator[\"ANY_OF\"] = \"anyOf\";\n})(FilterOperator || (FilterOperator = {}));\nconst not = fn => input => !fn(input);\nconst is = value => input => Object.is(value, input);\nconst lt = value => input => input < value;\nconst gt = value => input => input > value;\nconst equals = value => input => value === input;\nconst includes = value => input => input.includes(value);\nconst anyOf = value => input => value.includes(input);\nconst operators = {\n    [\"includes\" /* INCLUDES */]: includes,\n    [\"is\" /* IS */]: is,\n    [\"isNot\" /* IS_NOT */]: compose(is, not),\n    [\"lt\" /* LOWER_THAN */]: lt,\n    [\"gte\" /* GREATER_THAN_OR_EQUAL */]: compose(lt, not),\n    [\"gt\" /* GREATER_THAN */]: gt,\n    [\"lte\" /* LOWER_THAN_OR_EQUAL */]: compose(gt, not),\n    [\"equals\" /* EQUALS */]: equals,\n    [\"notEquals\" /* NOT_EQUALS */]: compose(equals, not),\n    [\"anyOf\" /* ANY_OF */]: anyOf\n};\nconst every = fns => (...args) => fns.every(fn => fn(...args));\nconst predicate = ({ value = '', operator = \"includes\" /* INCLUDES */, type }) => {\n    const typeIt = typeExpression(type);\n    const operateOnTyped = compose(typeIt, operators[operator]);\n    const predicateFunc = operateOnTyped(value);\n    return compose(typeIt, predicateFunc);\n};\n// Avoid useless filter lookup (improve perf)\nconst normalizeClauses = (conf) => {\n    const output = {};\n    const validPath = Object.keys(conf).filter(path => Array.isArray(conf[path]));\n    validPath.forEach(path => {\n        const validClauses = conf[path].filter(c => c.value !== '');\n        if (validClauses.length > 0) {\n            output[path] = validClauses;\n        }\n    });\n    return output;\n};\nconst filter = (filter) => {\n    const normalizedClauses = normalizeClauses(filter);\n    const funcList = Object.keys(normalizedClauses).map(path => {\n        const getter = pointer(path).get;\n        const clauses = normalizedClauses[path].map(predicate);\n        return compose(getter, every(clauses));\n    });\n    const filterPredicate = every(funcList);\n    return array => array.filter(filterPredicate);\n};\n\nexport { FilterOperator, predicate, filter };\n","import { pointer } from 'smart-table-json-pointer';\n\nconst basic = (input) => {\n    const { value, scope = [], isCaseSensitive = false } = input;\n    const searchPointers = scope.map(field => pointer(field).get);\n    if (scope.length === 0 || !value) {\n        return (array) => array;\n    }\n    const test = isCaseSensitive === true ? String(value) : String(value).toLowerCase();\n    return (array) => array.filter(item => searchPointers.some(p => {\n        const v = isCaseSensitive === true ? String(p(item)) : String(p(item)).toLowerCase();\n        return v.includes(test);\n    }));\n};\n\nfunction re(strs, ...substs) {\n    let reStr = transformRaw(strs.raw[0]);\n    for (const [i, subst] of substs.entries()) {\n        if (subst instanceof RegExp) {\n            reStr += subst.source;\n        } else if (typeof subst === 'string') {\n            reStr += quoteText(subst);\n        } else {\n            throw new Error('Illegal substitution: '+subst);\n        }\n        reStr += transformRaw(strs.raw[i+1]);\n    }\n    let flags = '';\n    if (reStr.startsWith('/')) {\n        const lastSlashIndex = reStr.lastIndexOf('/');\n        if (lastSlashIndex === 0) {\n            throw new Error('If the `re` string starts with a slash, it must end with a second slash and zero or more flags: '+reStr);\n        }\n        flags = reStr.slice(lastSlashIndex+1);\n        reStr = reStr.slice(1, lastSlashIndex);\n    }\n    return new RegExp(reStr, flags);\n}\n\nfunction transformRaw(str) {\n    return str.replace(/\\\\`/g, '`');\n}\n\n/**\n * All special characters are escaped, because you may want to quote several characters inside parentheses or square brackets.\n */\nfunction quoteText(text) {\n    return text.replace(/[\\\\^$.*+?()[\\]{}|=!<>:-]/g, '\\\\$&');\n}\n\nconst regexp = (input) => {\n    const { value, scope = [], escape = false, flags = '' } = input;\n    const searchPointers = scope.map(field => pointer(field).get);\n    if (scope.length === 0 || !value) {\n        return (array) => array;\n    }\n    const regex = escape === true ? re `/${value}/${flags}` : new RegExp(value, flags);\n    return (array) => array.filter(item => searchPointers.some(p => regex.test(String(p(item)))));\n};\n\nexport { basic, regexp };\n","const emitter = () => {\n    const listenersLists = {};\n    const instance = {\n        on(event, ...listeners) {\n            listenersLists[event] = (listenersLists[event] || []).concat(listeners);\n            return instance;\n        },\n        dispatch(event, ...args) {\n            const listeners = listenersLists[event] || [];\n            for (const listener of listeners) {\n                listener(...args);\n            }\n            return instance;\n        },\n        off(event, ...listeners) {\n            if (event === undefined) {\n                Object.keys(listenersLists).forEach(ev => instance.off(ev));\n            }\n            else {\n                const list = listenersLists[event] || [];\n                listenersLists[event] = listeners.length ? list.filter(listener => !listeners.includes(listener)) : [];\n            }\n            return instance;\n        }\n    };\n    return instance;\n};\nconst proxyListener = (eventMap) => ({ emitter }) => {\n    const eventListeners = {};\n    const proxy = {\n        off(ev) {\n            if (!ev) {\n                Object.keys(eventListeners).forEach(eventName => proxy.off(eventName));\n            }\n            if (eventListeners[ev]) {\n                emitter.off(ev, ...eventListeners[ev]);\n            }\n            return proxy;\n        }\n    };\n    for (const ev of Object.keys(eventMap)) {\n        const method = eventMap[ev];\n        eventListeners[ev] = [];\n        proxy[method] = function (...listeners) {\n            eventListeners[ev] = eventListeners[ev].concat(listeners);\n            emitter.on(ev, ...listeners);\n            return proxy;\n        };\n    }\n    return proxy;\n};\n\nexport { emitter, proxyListener };\n","import { defaultSortFactory } from 'smart-table-sort';\nexport { SortDirection } from 'smart-table-sort';\nimport { filter } from 'smart-table-filter';\nexport { FilterOperator } from 'smart-table-filter';\nimport { regexp } from 'smart-table-search';\nimport { curry, compose, tap } from 'smart-table-operators';\nimport { pointer } from 'smart-table-json-pointer';\nimport { emitter, proxyListener } from 'smart-table-events';\n\nconst sliceFactory = ({ page = 1, size } = { page: 1 }) => (array = []) => {\n    const actualSize = size || array.length;\n    const offset = (page - 1) * actualSize;\n    return array.slice(offset, offset + actualSize);\n};\n\nvar SmartTableEvents;\n(function (SmartTableEvents) {\n    SmartTableEvents[\"TOGGLE_SORT\"] = \"TOGGLE_SORT\";\n    SmartTableEvents[\"DISPLAY_CHANGED\"] = \"DISPLAY_CHANGED\";\n    SmartTableEvents[\"PAGE_CHANGED\"] = \"CHANGE_PAGE\";\n    SmartTableEvents[\"EXEC_CHANGED\"] = \"EXEC_CHANGED\";\n    SmartTableEvents[\"FILTER_CHANGED\"] = \"FILTER_CHANGED\";\n    SmartTableEvents[\"SUMMARY_CHANGED\"] = \"SUMMARY_CHANGED\";\n    SmartTableEvents[\"SEARCH_CHANGED\"] = \"SEARCH_CHANGED\";\n    SmartTableEvents[\"EXEC_ERROR\"] = \"EXEC_ERROR\";\n})(SmartTableEvents || (SmartTableEvents = {}));\nconst curriedPointer = (path) => {\n    const { get, set } = pointer(path);\n    return { get, set: curry(set) };\n};\nconst tableDirective = ({ sortFactory, tableState, data, filterFactory, searchFactory }) => {\n    let filteredCount = data.length;\n    let matchingItems = data;\n    const table = emitter();\n    const sortPointer = curriedPointer('sort');\n    const slicePointer = curriedPointer('slice');\n    const filterPointer = curriedPointer('filter');\n    const searchPointer = curriedPointer('search');\n    // We need to register in case the summary comes from outside (like server data)\n    table.on(\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */, ({ filteredCount: count }) => {\n        filteredCount = count;\n    });\n    const safeAssign = curry((base, extension) => Object.assign({}, base, extension));\n    const dispatch = curry(table.dispatch, 2);\n    const dispatchSummary = (filtered) => {\n        matchingItems = filtered;\n        return dispatch(\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */, {\n            page: tableState.slice.page,\n            size: tableState.slice.size,\n            filteredCount: filtered.length\n        });\n    };\n    const exec = ({ processingDelay = 20 } = { processingDelay: 20 }) => {\n        table.dispatch(\"EXEC_CHANGED\" /* EXEC_CHANGED */, { working: true });\n        setTimeout(() => {\n            try {\n                const filterFunc = filterFactory(filterPointer.get(tableState));\n                const searchFunc = searchFactory(searchPointer.get(tableState));\n                const sortFunc = sortFactory(sortPointer.get(tableState));\n                const sliceFunc = sliceFactory(slicePointer.get(tableState));\n                const execFunc = compose(filterFunc, searchFunc, tap(dispatchSummary), sortFunc, sliceFunc);\n                const displayed = execFunc(data);\n                table.dispatch(\"DISPLAY_CHANGED\" /* DISPLAY_CHANGED */, displayed.map(d => ({\n                    index: data.indexOf(d),\n                    value: d\n                })));\n            }\n            catch (err) {\n                table.dispatch(\"EXEC_ERROR\" /* EXEC_ERROR */, err);\n            }\n            finally {\n                table.dispatch(\"EXEC_CHANGED\" /* EXEC_CHANGED */, { working: false });\n            }\n        }, processingDelay);\n    };\n    const updateTableState = curry((pter, ev, newPartialState) => compose(safeAssign(pter.get(tableState)), tap(dispatch(ev)), pter.set(tableState))(newPartialState));\n    const resetToFirstPage = () => updateTableState(slicePointer, \"CHANGE_PAGE\" /* PAGE_CHANGED */, { page: 1 });\n    const tableOperation = (pter, ev) => compose(updateTableState(pter, ev), resetToFirstPage, () => table.exec() // We wrap within a function so table.exec can be overwritten (when using with a server for example)\n    );\n    const api = {\n        sort: tableOperation(sortPointer, \"TOGGLE_SORT\" /* TOGGLE_SORT */),\n        filter: tableOperation(filterPointer, \"FILTER_CHANGED\" /* FILTER_CHANGED */),\n        search: tableOperation(searchPointer, \"SEARCH_CHANGED\" /* SEARCH_CHANGED */),\n        slice: compose(updateTableState(slicePointer, \"CHANGE_PAGE\" /* PAGE_CHANGED */), () => table.exec()),\n        exec,\n        async eval(state = tableState) {\n            const sortFunc = sortFactory(sortPointer.get(state));\n            const searchFunc = searchFactory(searchPointer.get(state));\n            const filterFunc = filterFactory(filterPointer.get(state));\n            const sliceFunc = sliceFactory(slicePointer.get(state));\n            const execFunc = compose(filterFunc, searchFunc, sortFunc, sliceFunc);\n            return execFunc(data).map(d => ({ index: data.indexOf(d), value: d }));\n        },\n        onDisplayChange(fn) {\n            table.on(\"DISPLAY_CHANGED\" /* DISPLAY_CHANGED */, fn);\n        },\n        getTableState() {\n            const sort = Object.assign({}, tableState.sort);\n            const search = Object.assign({}, tableState.search);\n            const slice = Object.assign({}, tableState.slice);\n            const filter = {};\n            for (const prop of Object.getOwnPropertyNames(tableState.filter)) {\n                filter[prop] = tableState.filter[prop].map(v => Object.assign({}, v));\n            }\n            return { sort, search, slice, filter };\n        },\n        getMatchingItems() {\n            return [...matchingItems];\n        }\n    };\n    const instance = Object.assign(table, api);\n    Object.defineProperties(instance, {\n        filteredCount: {\n            get() {\n                return filteredCount;\n            }\n        },\n        length: {\n            get() {\n                return data.length;\n            }\n        }\n    });\n    return instance;\n};\n\nconst filterListener = proxyListener({ [\"FILTER_CHANGED\" /* FILTER_CHANGED */]: 'onFilterChange' });\n// todo expose and re-export from smart-table-filter\nvar FilterType;\n(function (FilterType) {\n    FilterType[\"BOOLEAN\"] = \"boolean\";\n    FilterType[\"NUMBER\"] = \"number\";\n    FilterType[\"DATE\"] = \"date\";\n    FilterType[\"STRING\"] = \"string\";\n})(FilterType || (FilterType = {}));\nconst filterDirective = ({ table, pointer, operator = \"includes\" /* INCLUDES */, type = \"string\" /* STRING */ }) => {\n    const proxy = filterListener({ emitter: table });\n    return Object.assign({\n        filter(input) {\n            const filterConf = {\n                [pointer]: [\n                    {\n                        value: input,\n                        operator,\n                        type\n                    }\n                ]\n            };\n            return table.filter(filterConf);\n        },\n        state() {\n            return table.getTableState().filter;\n        }\n    }, proxy);\n};\n\nconst searchListener = proxyListener({ [\"SEARCH_CHANGED\" /* SEARCH_CHANGED */]: 'onSearchChange' });\nconst searchDirective = ({ table, scope = [] }) => {\n    const proxy = searchListener({ emitter: table });\n    return Object.assign(proxy, {\n        search(input, opts = {}) {\n            return table.search(Object.assign({}, { value: input, scope }, opts));\n        },\n        state() {\n            return table.getTableState().search;\n        }\n    }, proxy);\n};\n\nconst sliceListener = proxyListener({\n    [\"CHANGE_PAGE\" /* PAGE_CHANGED */]: 'onPageChange',\n    [\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */]: 'onSummaryChange'\n});\nconst paginationDirective = ({ table }) => {\n    let { slice: { page: currentPage, size: currentSize } } = table.getTableState();\n    let itemListLength = table.filteredCount;\n    const proxy = sliceListener({ emitter: table });\n    const api = {\n        selectPage(p) {\n            return table.slice({ page: p, size: currentSize });\n        },\n        selectNextPage() {\n            return api.selectPage(currentPage + 1);\n        },\n        selectPreviousPage() {\n            return api.selectPage(currentPage - 1);\n        },\n        changePageSize(size) {\n            return table.slice({ page: 1, size });\n        },\n        isPreviousPageEnabled() {\n            return currentPage > 1;\n        },\n        isNextPageEnabled() {\n            return Math.ceil(itemListLength / currentSize) > currentPage;\n        },\n        state() {\n            return Object.assign(table.getTableState().slice, { filteredCount: itemListLength });\n        }\n    };\n    const directive = Object.assign(api, proxy);\n    directive.onSummaryChange(({ page: p, size: s, filteredCount }) => {\n        currentPage = p;\n        currentSize = s;\n        itemListLength = filteredCount;\n    });\n    return directive;\n};\n\nconst debounce = (fn, time) => {\n    let timer = null;\n    return (...args) => {\n        if (timer !== null) {\n            clearTimeout(timer);\n        }\n        timer = setTimeout(() => fn(...args), time);\n    };\n};\nconst sortListeners = proxyListener({ [\"TOGGLE_SORT\" /* TOGGLE_SORT */]: 'onSortToggle' });\nconst directions = [\"asc\" /* ASC */, \"desc\" /* DESC */];\nconst sortDirective = ({ pointer, table, cycle = false, debounceTime = 0 }) => {\n    const cycleDirections = cycle === true ? [\"none\" /* NONE */].concat(directions) : [...directions].reverse();\n    const commit = debounce(table.sort, debounceTime);\n    let hit = 0;\n    const proxy = sortListeners({ emitter: table });\n    const directive = Object.assign({\n        toggle() {\n            hit++;\n            const direction = cycleDirections[hit % cycleDirections.length];\n            return commit({ pointer, direction });\n        },\n        state() {\n            return table.getTableState().sort;\n        }\n    }, proxy);\n    directive.onSortToggle(({ pointer: p }) => {\n        hit = pointer !== p ? 0 : hit;\n    });\n    const { pointer: statePointer, direction = \"asc\" /* ASC */ } = directive.state();\n    hit = statePointer === pointer ? (direction === \"asc\" /* ASC */ ? 1 : 2) : 0;\n    return directive;\n};\n\nconst summaryListener = proxyListener({ [\"SUMMARY_CHANGED\" /* SUMMARY_CHANGED */]: 'onSummaryChange' });\nconst summaryDirective = ({ table }) => summaryListener({ emitter: table });\n\nconst executionListener = proxyListener({ [\"EXEC_CHANGED\" /* EXEC_CHANGED */]: 'onExecutionChange' });\nconst workingIndicatorDirective = ({ table }) => executionListener({ emitter: table });\n\nconst defaultTableState = () => ({ sort: {}, slice: { page: 1 }, filter: {}, search: {} });\nconst smartTable = ({ sortFactory = defaultSortFactory, filterFactory = filter, searchFactory = regexp, tableState = defaultTableState(), data = [] } = {\n    sortFactory: defaultSortFactory,\n    filterFactory: filter,\n    searchFactory: regexp,\n    tableState: defaultTableState(),\n    data: []\n}, ...tableExtensions) => {\n    const coreTable = tableDirective({ sortFactory, filterFactory, tableState, data, searchFactory });\n    return tableExtensions.reduce((accumulator, newdir) => Object.assign(accumulator, newdir({\n        sortFactory,\n        filterFactory,\n        searchFactory,\n        tableState,\n        data,\n        table: coreTable\n    })), coreTable);\n};\n\nexport { FilterType, SmartTableEvents, filterDirective, paginationDirective, searchDirective, sliceFactory, smartTable, sortDirective, summaryDirective, tableDirective, workingIndicatorDirective };\n","import {workingIndicatorDirective} from 'smart-table-core';\n\nexport const loadingIndicator = ({table, el}) => {\n    const component = workingIndicatorDirective({table});\n    component.onExecutionChange(function ({working}) {\n        el.classList.remove('st-working');\n        if (working === true) {\n            el.classList.add('st-working');\n        }\n    });\n    return component;\n};\n","import {sortDirective} from 'smart-table-core';\n\nexport const sort = ({el, table, conf = {}}) => {\n    const pointer = conf.pointer || el.getAttribute('data-st-sort');\n    const cycle = conf.cycle || el.hasAttribute('data-st-sort-cycle');\n    const component = sortDirective({pointer, table, cycle});\n    component.onSortToggle(({pointer: currentPointer, direction}) => {\n        el.classList.remove('st-sort-asc', 'st-sort-desc');\n        if (pointer === currentPointer && direction !== 'none') {\n            const className = direction === 'asc' ? 'st-sort-asc' : 'st-sort-desc';\n            el.classList.add(className);\n        }\n    });\n    const eventListener = () => component.toggle();\n    el.addEventListener('click', eventListener);\n    return component;\n};\n","export function debounce(fn, delay) {\n    let timeoutId;\n    return (ev) => {\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            fn(ev);\n        }, delay);\n    };\n}\n","import {filterDirective} from 'smart-table-core';\nimport {debounce} from './helpers';\n\nexport const filter = ({table, el, delay = 400, conf = {}}) => {\n    const pointer = conf.pointer || el.getAttribute('data-st-filter');\n    const operator = conf.operator || el.getAttribute('data-st-filter-operator') || 'includes';\n    const elType = el.hasAttribute('type') ? el.getAttribute('type') : 'string';\n    let type = conf.type || el.getAttribute('data-st-filter-type');\n    if (!type) {\n        type = ['date', 'number'].includes(elType) ? elType : 'string';\n    }\n    const component = filterDirective({table, pointer, type, operator});\n    const eventListener = debounce(ev => component.filter(el.value), delay);\n    el.addEventListener('input', eventListener);\n    if (el.tagName === 'SELECT') {\n        el.addEventListener('change', eventListener);\n    }\n    return component;\n};\n","import {searchDirective} from 'smart-table-core';\nimport {debounce} from './helpers';\n\nexport const search = ({el, table, delay = 400, conf = {}}) => {\n    const scope = conf.scope || (el.getAttribute('data-st-search') || '')\n        .split(',')\n        .map(s => s.trim());\n    const flags = conf.flags || el.getAttribute('data-st-search-flags') || '';\n    const component = searchDirective({table, scope});\n    const eventListener = debounce(() => {\n        component.search(el.value, {flags});\n    }, delay);\n    el.addEventListener('input', eventListener);\n};\n","export default function ({name: {first: firstName, last: lastName}, gender, birthDate, size}) {\n    const tr = document.createElement('tr');\n    tr.innerHTML = `<td>${lastName}</td><td>${firstName}</td><td>${gender}</td><td>${birthDate.toLocaleDateString()}</td><td>${size}</td>`;\n    return tr;\n}\n","import {table as tableComponentFactory} from '../index';\nimport {smartTable as table} from 'smart-table-core';\nimport row from './components/row';\nimport summary from './components/summary';\nimport pagination from './components/pagination';\nimport rangeSizeInput from './components/rangeSizeInput';\n\n\nconst el = document.getElementById('table-container');\nconst tbody = el.querySelector('tbody');\nconst summaryEl = el.querySelector('[data-st-summary]');\n\nconst initialState = {sort: {}, filter: {}, slice: {page: 1, size: 20}, search: {}};\nconst t = table({data, tableState: initialState});\nconst tableComponent = tableComponentFactory({el, table: t});\n\nsummary({table: t, el: summaryEl});\nrangeSizeInput({\n    table: t,\n    minEl: document.getElementById('min-size'),\n    maxEl: document.getElementById('max-size')\n});\n\nconst paginationContainer = el.querySelector('[data-st-pagination]');\npagination({table: t, el: paginationContainer});\n\ntableComponent.onDisplayChange(displayed => {\n    tbody.innerHTML = '';\n    for (let r of displayed) {\n        const newChild = row((r.value), r.index, t);\n        tbody.appendChild(newChild);\n    }\n});\n\ntableComponent.exec();\n","import {loadingIndicator as loading} from './loadingIndicator';\nimport {sort} from './sort';\nimport {filter} from './filters';\nimport {search as searchInput} from './search';\n\nexport const table = ({el, table}) => {\n    const bootDirective = (factory, selector) => Array.from(el.querySelectorAll(selector)).forEach(el => factory({\n        el,\n        table\n    }));\n    // boot\n    bootDirective(sort, '[data-st-sort]');\n    bootDirective(loading, '[data-st-loading-indicator]');\n    bootDirective(searchInput, '[data-st-search]');\n    bootDirective(filter, '[data-st-filter]');\n\n    return table;\n};\n","import {summaryDirective} from 'smart-table-core';\n\nexport default function summaryComponent({table, el}) {\n    const dir = summaryDirective({table});\n    dir.onSummaryChange(({page, size, filteredCount}) => {\n        el.innerHTML = `showing items <strong>${(page - 1) * size + (filteredCount > 0 ? 1 : 0)}</strong> - <strong>${Math.min(filteredCount, page * size)}</strong> of <strong>${filteredCount}</strong> matching items`;\n    });\n    return dir;\n}\n","import {debounce} from '../../index';\n\nexport default function rangSizeInput({minEl, maxEl, table}) {\n\n    let ltValue;\n    let gtValue;\n\n    const commit = () => {\n        const clauses = [];\n        if (ltValue) {\n            clauses.push({value: ltValue, operator: 'lte', type: 'number'});\n        }\n        if (gtValue) {\n            clauses.push({value: gtValue, operator: 'gte', type: 'number'});\n        }\n        table.filter({\n            size: clauses\n        });\n    };\n\n    minEl.addEventListener('input', debounce((ev) => {\n        gtValue = minEl.value;\n        commit();\n    }, 400));\n\n    maxEl.addEventListener('input', debounce((ev) => {\n        ltValue = maxEl.value;\n        commit();\n    }, 400));\n}\n","import {paginationDirective} from 'smart-table-core';\n\nexport default function paginationComponent({table, el}) {\n    const previousButton = document.createElement('button');\n    previousButton.innerHTML = 'Previous';\n    const nextButton = document.createElement('button');\n    nextButton.innerHTML = 'Next';\n    const pageSpan = document.createElement('span');\n    pageSpan.innerHTML = '- page 1 -';\n    const comp = paginationDirective({table});\n\n    comp.onSummaryChange(({page}) => {\n        previousButton.disabled = !comp.isPreviousPageEnabled();\n        nextButton.disabled = !comp.isNextPageEnabled();\n        pageSpan.innerHTML = `- ${page} -`;\n    });\n\n    previousButton.addEventListener('click', () => comp.selectPreviousPage());\n    nextButton.addEventListener('click', () => comp.selectNextPage());\n\n    el.appendChild(previousButton);\n    el.appendChild(pageSpan);\n    el.appendChild(nextButton);\n\n    return comp;\n}\n"],"names":["compose","first","fns","args","reduce","previous","current","curry","fn","arityLeft","arity","length","argLength","moreArgs","tap","arg","pointer","path","parts","split","partial","obj","shift","get","target","set","newTree","leaf","intermediate","reverse","key","undefined","Object","assign","defaultComparator","a","b","SortDirection","defaultSortFactory","conf","pointer$$1","direction","comparator","array","orderFunc","prop","propGetter","sortByProperty","compareFunc","f","swap","sort","Type","FilterOperator","not","input","is","value","lt","gt","equals","operators","includes","isNot","gte","lte","notEquals","anyOf","every","predicate","operator","type","typeIt","BOOLEAN","Boolean","NUMBER","Number","DATE","val","Date","STRING","String","toLowerCase","typeExpression","predicateFunc","operateOnTyped","filter","normalizedClauses","output","keys","Array","isArray","forEach","validClauses","c","normalizeClauses","funcList","map","getter","clauses","filterPredicate","re","strs","substs","reStr","transformRaw","raw","i","subst","entries","RegExp","source","Error","replace","flags","startsWith","lastSlashIndex","lastIndexOf","slice","str","regexp","scope","escape","searchPointers","field","regex","item","some","p","test","proxyListener","eventMap","emitter","eventListeners","proxy","off","ev","eventName","method","listeners","concat","on","sliceFactory","page","size","actualSize","offset","SmartTableEvents","curriedPointer","tableDirective","sortFactory","tableState","data","filterFactory","searchFactory","filteredCount","matchingItems","table","listenersLists","instance","event","[object Object]","listener","list","sortPointer","slicePointer","filterPointer","searchPointer","count","safeAssign","base","extension","dispatch","dispatchSummary","filtered","updateTableState","pter","newPartialState","resetToFirstPage","tableOperation","exec","api","search","processingDelay","working","setTimeout","filterFunc","searchFunc","sortFunc","sliceFunc","displayed","execFunc","d","index","indexOf","err","state","getOwnPropertyNames","v","getMatchingItems","defineProperties","filterListener","FILTER_CHANGED","FilterType","searchListener","SEARCH_CHANGED","sliceListener","CHANGE_PAGE","SUMMARY_CHANGED","paginationDirective","currentPage","currentSize","getTableState","itemListLength","selectPage","selectNextPage","selectPreviousPage","changePageSize","isPreviousPageEnabled","isNextPageEnabled","Math","ceil","directive","onSummaryChange","s","sortListeners","TOGGLE_SORT","directions","sortDirective","cycle","debounceTime","cycleDirections","commit","time","timer","clearTimeout","debounce","hit","onSortToggle","statePointer","summaryListener","summaryDirective","executionListener","EXEC_CHANGED","loadingIndicator","el","component","workingIndicatorDirective","onExecutionChange","classList","remove","add","getAttribute","hasAttribute","currentPointer","className","addEventListener","toggle","delay","timeoutId","elType","filterConf","filterDirective","eventListener","tagName","trim","opts","searchDirective","name","firstName","last","lastName","gender","birthDate","tr","document","createElement","innerHTML","toLocaleDateString","getElementById","tbody","querySelector","summaryEl","t","tableExtensions","coreTable","accumulator","newdir","tableComponent","bootDirective","factory","selector","from","querySelectorAll","loading","searchInput","tableComponentFactory","dir","min","minEl","maxEl","ltValue","gtValue","push","previousButton","nextButton","pageSpan","comp","disabled","appendChild","onDisplayChange","r","newChild","row"],"mappings":"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"}